name: Nomad
on:
  push:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'The version of Nomad to build an image for e.g. v1.6.3'
        required: true
        type: string

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Nomad and Consul version
        id: collect
        run: |-
          # Get latest Nomad version from inputs
          NOMAD_VERSION=${{inputs.version}}

          # if no version is provided, get the latest version from github
          if [ -z "$NOMAD_VERSION" ]; then
            NOMAD_VERSION=$(curl --silent "https://api.github.com/repos/hashicorp/nomad/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          
            CURRENT_VERSION=$(curl --silent --fail -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/orgs/jumppad-labs/packages/container/nomad/versions" | \
            jq -r '.[].metadata.container.tags[] | select( . != null )' | \
            sort -V -r | \
            head -n 1)
          fi
          
          # Get latest Consul version
          CONSUL_VERSION=$(curl --silent "https://api.github.com/repos/hashicorp/consul/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

          echo "consul=$CONSUL_VERSION" >> "$GITHUB_OUTPUT"
          echo "nomad=$NOMAD_VERSION" >> "$GITHUB_OUTPUT"
          echo "current=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"

          echo "Nomad version: $NOMAD_VERSION"
          echo "Current package version: $CURRENT_VERSION"
          echo "Consul version: $CONSUL_VERSION"

      - name: Remove v in Tag Nomad
        id: nomad
        uses: ashley-taylor/regex-property-action@v1.3
        with:
          value: ${{steps.collect.outputs.nomad}}
          regex: "v"
          replacement: ""
      
      - name: Remove v in Tag Consul
        id: consul
        uses: ashley-taylor/regex-property-action@v1.3
        with:
          value: ${{steps.collect.outputs.consul}}
          regex: "v"
          replacement: ""

      - name: Login to GitHub Container Registry
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image Nomad
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nomad
          platforms: linux/amd64,linux/arm64
          build-args: |
            NOMAD_VERSION=${{steps.nomad.outputs.value}}
          push: true
          tags: ghcr.io/jumppad-labs/nomad:${{steps.collect.outputs.nomad}}
      
      - name: Build and push Docker image Nomad and Java
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nomad
          platforms: linux/amd64,linux/arm64
          build-args: |
            NOMAD_VERSION=${{steps.nomad.outputs.value}}
            CONSUL_VERSION=${{steps.consul.outputs.value}}
          file: nomad/Dockerfile_Java
          push: true
          tags: ghcr.io/jumppad-labs/nomad:${{steps.collect.outputs.nomad}}-java
      
      - name: Build and push Docker image Nomad and Qemu
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nomad
          platforms: linux/amd64,linux/arm64
          build-args: |
            NOMAD_VERSION=${{steps.nomad.outputs.value}}
            CONSUL_VERSION=${{steps.consul.outputs.value}}
          file: nomad/Dockerfile_qemu
          push: true
          tags: ghcr.io/jumppad-labs/nomad:${{steps.collect.outputs.nomad}}-qemu
      
      - name: Build and push Docker image Nomad and Consul
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nomad
          platforms: linux/amd64,linux/arm64
          build-args: |
            NOMAD_VERSION=${{steps.nomad.outputs.value}}
            CONSUL_VERSION=${{steps.consul.outputs.value}}
          file: nomad/Dockerfile_Consul
          push: true
          tags: ghcr.io/jumppad-labs/nomad:${{steps.collect.outputs.nomad}}-consul
      
      - name: Build and push Docker image Nomad and All previous features
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nomad
          platforms: linux/amd64,linux/arm64
          build-args: |
            NOMAD_VERSION=${{steps.nomad.outputs.value}}
            CONSUL_VERSION=${{steps.consul.outputs.value}}
          file: nomad/Dockerfile_all
          push: true
          tags: ghcr.io/jumppad-labs/nomad:${{steps.collect.outputs.nomad}}-all

      - name: Test built image
        if: steps.collect.outputs.nomad != steps.collect.outputs.current
        run: |-
          # Install Jumppad
          curl https://jumppad.dev/install | bash

          # Test the image
          jumppad test --tags @Single --var version=${{steps.collect.outputs.nomad}} ./nomad/tests 